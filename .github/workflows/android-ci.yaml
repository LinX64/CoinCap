name: build

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Checks
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Check Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Run Detekt & AutoCorrect
        run: ./gradlew detekt --auto-correct

  unit-tests:
    needs: check
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run Tests
        run: ./gradlew test

  androidTest:
    needs: check
    name: Instrumented tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device-config: [ "pixel_6api31aosp" ]

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/checkout@v3

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Install KVM
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virt-manager
          sudo adduser $USER libvirt
          sudo adduser $USER kvm

      - name: Load KVM module and set permissions on /dev/kvm
        run: |
          sudo modprobe kvm
          sudo modprobe kvm_amd 
          sudo chmod 666 /dev/kvm
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run instrumented tests with GMD
        run: ./gradlew cleanManagedDevices --unused-only &&
          ./gradlew ${{ matrix.device-config }}debugAndroidTest -Dorg.gradle.workers.max=1
          -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect" -Pandroid.experimental.testOptions.managedDevices.emulator.showKernelLogging=true

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ matrix.api-level }}
          path: '*/build/reports/androidTests'